version: '3.8'

services:
  config-server:
    # image: ... # Using build context instead
    container_name: config-server
    build:
      context: ./config-server
      dockerfile: Dockerfile
    ports:
      - "8888:8888" # Host port : Container port
    volumes:
      - ./config-repo:/config-repo # Host path : Container path
    environment:
      SPRING_PROFILES_ACTIVE: git # Can also set profile via environment
    networks:
      - healthcare-network

  eureka-server:
    container_name: eureka-server
    build:
      context: ./eureka-server
      dockerfile: Dockerfile
    ports:
      - "8761:8761"
    environment:
      CONFIG_SERVER_HOST: config-server
      # Keep these overrides
      EUREKA_CLIENT_REGISTER_WITH_EUREKA: "false"
      EUREKA_CLIENT_FETCH_REGISTRY: "false"
      # --- Force the service URL for the internal client ---
      # Use the correct internal hostname resolvable via Docker Compose DNS
      EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: http://eureka-server:8761/eureka/
    networks:
      - healthcare-network
    depends_on:
      - config-server
  # --- Database ---
  postgres-db:
    image: postgres:15 # Use a specific recent version
    container_name: healthcare_postgres_instance
    environment:
      POSTGRES_DB: servicedb_default # A default DB, services will use specific ones
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password # CHANGE THIS in a real scenario
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - healthcare-network

  # --- Message Broker ---
  rabbitmq:
    image: rabbitmq:3.11-management # Use version with management UI
    container_name: rabbitmq
    ports:
      - "5672:5672"  # AMQP port
      - "15672:15672" # Management UI port
    environment:
      RABBITMQ_DEFAULT_USER: guest # CHANGE THIS for production
      RABBITMQ_DEFAULT_PASS: guest # CHANGE THIS for production
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq/
    networks:
      - healthcare-network

  # --- Tracing Backend ---
  zipkin:
    image: openzipkin/zipkin:latest
    container_name: zipkin
    ports:
      - "9411:9411"
    networks:
      - healthcare-network

  # --- MongoDB (Optional - if needed by Medical Records Service later) ---
  # mongodb:
  #   image: mongo:6
  #   container_name: mongodb
  #   ports:
  #     - "27017:27017"
  #   volumes:
  #     - mongo_data:/data/db
  #   networks:
  #     - healthcare-network

  # --- Monitoring (Optional - Add later if needed) ---
  # prometheus:
  #   ...
  # grafana:
  #   ...

# --- Volumes Definition ---
volumes:
  postgres_data:
  rabbitmq_data:
  # mongo_data:

# --- Network Definition ---
networks:
  healthcare-network:
    driver: bridge # Default Docker network driver



