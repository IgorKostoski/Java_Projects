# healthcare-system/config-repo/api-gateway.yml
server:
  port: 8080

management:
  endpoints:
    web:
      exposure:
        include: health,info,prometheus,gateway
  endpoint:
    gateway:
      enabled: true
    health:
      show-details: always
  metrics:
    tags:
      application: ${spring.application.name:api-gateway}

spring: # <-- Top-level spring key
  cloud: # <-- Sibling cloud key
    gateway:
      discovery:
        locator:
          enabled: false
        default-filters:
          - TokenRelay
      routes:
        - id: patient_service_route
          uri: lb://patient-service
          predicates:
            - Path=/api/patients/**
          filters:
            - name: CircuitBreaker
              args:
                name: patientServiceCircuitBreaker
                # fallbackUri: forward:/fallback/patientServiceFallback

        - id: doctor_service_route
          uri: lb://doctor-service
          predicates:
            - Path=/api/doctors/**

        # ... other service routes ...

        - id: auth_service_oauth_route
          uri: lb://auth-service
          predicates:
            - Path=/oauth2/**, /.well-known/openid-configuration, /oauth2/jwks

        - id: auth_service_login_route
          uri: lb://auth-service
          predicates:
            - Path=/login


## --- Corrected Resilience4j Block Indentation ---
resilience4j.circuitbreaker:
  configs:
    default:
      slidingWindowType: COUNT_BASED
      slidingWindowSize: 10
      failureRateThreshold: 50
      waitDurationInOpenState: 10000
      permittedNumberOfCallsInHalfOpenState: 3
      automaticTransitionFromOpenToHalfOpenEnabled: true
  instances:
    patientServiceCircuitBreaker:
      baseConfig: default
    doctorServiceCircuitBreaker:
      baseConfig: default

# --- Logging Block ---
logging:
  level:
    com.healthcare.apigateway: DEBUG
    org.springframework.cloud.gateway: DEBUG # See gateway processing
    reactor.netty.http.client: INFO
    org.springframework.security: DEBUG # Detailed security logs
    org.springframework.beans.factory: DEBUG # See bean creation details
    org.springframework.core.env: DEBUG # See property source loading/resolution
    org.springframework.boot.context.config: DEBUG # Config data loading
    org.springframework.cloud.config.client: DEBUG # Config client details